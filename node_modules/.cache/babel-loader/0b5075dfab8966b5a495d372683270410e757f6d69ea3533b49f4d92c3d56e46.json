{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KURUV\\\\Desktop\\\\shopping\\\\src\\\\context\\\\NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nconst notificationReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        notifications: [...state.notifications, {\n          id: Date.now(),\n          ...action.payload\n        }]\n      };\n    case 'REMOVE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.filter(notification => notification.id !== action.payload)\n      };\n    case 'CLEAR_NOTIFICATIONS':\n      return {\n        ...state,\n        notifications: []\n      };\n    default:\n      return state;\n  }\n};\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(notificationReducer, {\n    notifications: []\n  });\n  const addNotification = notification => {\n    dispatch({\n      type: 'ADD_NOTIFICATION',\n      payload: notification\n    });\n\n    // Auto-remove notification after 5 seconds\n    setTimeout(() => {\n      removeNotification(notification.id || Date.now());\n    }, 5000);\n  };\n  const removeNotification = id => {\n    dispatch({\n      type: 'REMOVE_NOTIFICATION',\n      payload: id\n    });\n  };\n  const clearNotifications = () => {\n    dispatch({\n      type: 'CLEAR_NOTIFICATIONS'\n    });\n  };\n  const showSuccess = message => {\n    addNotification({\n      type: 'success',\n      message,\n      icon: '✅'\n    });\n  };\n  const showError = message => {\n    addNotification({\n      type: 'error',\n      message,\n      icon: '❌'\n    });\n  };\n  const showInfo = message => {\n    addNotification({\n      type: 'info',\n      message,\n      icon: 'ℹ️'\n    });\n  };\n  const showWarning = message => {\n    addNotification({\n      type: 'warning',\n      message,\n      icon: '⚠️'\n    });\n  };\n  const value = {\n    notifications: state.notifications,\n    addNotification,\n    removeNotification,\n    clearNotifications,\n    showSuccess,\n    showError,\n    showInfo,\n    showWarning\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n_s(NotificationProvider, \"K0ujtISclKamm65BG28da8lkA3c=\");\n_c = NotificationProvider;\nexport const useNotification = () => {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","NotificationContext","notificationReducer","state","action","type","notifications","id","Date","now","payload","filter","notification","NotificationProvider","children","_s","dispatch","addNotification","setTimeout","removeNotification","clearNotifications","showSuccess","message","icon","showError","showInfo","showWarning","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotification","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/KURUV/Desktop/shopping/src/context/NotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst NotificationContext = createContext();\r\n\r\nconst notificationReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_NOTIFICATION':\r\n      return {\r\n        ...state,\r\n        notifications: [...state.notifications, {\r\n          id: Date.now(),\r\n          ...action.payload,\r\n        }],\r\n      };\r\n\r\n    case 'REMOVE_NOTIFICATION':\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(notification => notification.id !== action.payload),\r\n      };\r\n\r\n    case 'CLEAR_NOTIFICATIONS':\r\n      return {\r\n        ...state,\r\n        notifications: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(notificationReducer, {\r\n    notifications: [],\r\n  });\r\n\r\n  const addNotification = (notification) => {\r\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\r\n    \r\n    // Auto-remove notification after 5 seconds\r\n    setTimeout(() => {\r\n      removeNotification(notification.id || Date.now());\r\n    }, 5000);\r\n  };\r\n\r\n  const removeNotification = (id) => {\r\n    dispatch({ type: 'REMOVE_NOTIFICATION', payload: id });\r\n  };\r\n\r\n  const clearNotifications = () => {\r\n    dispatch({ type: 'CLEAR_NOTIFICATIONS' });\r\n  };\r\n\r\n  const showSuccess = (message) => {\r\n    addNotification({\r\n      type: 'success',\r\n      message,\r\n      icon: '✅',\r\n    });\r\n  };\r\n\r\n  const showError = (message) => {\r\n    addNotification({\r\n      type: 'error',\r\n      message,\r\n      icon: '❌',\r\n    });\r\n  };\r\n\r\n  const showInfo = (message) => {\r\n    addNotification({\r\n      type: 'info',\r\n      message,\r\n      icon: 'ℹ️',\r\n    });\r\n  };\r\n\r\n  const showWarning = (message) => {\r\n    addNotification({\r\n      type: 'warning',\r\n      message,\r\n      icon: '⚠️',\r\n    });\r\n  };\r\n\r\n  const value = {\r\n    notifications: state.notifications,\r\n    addNotification,\r\n    removeNotification,\r\n    clearNotifications,\r\n    showSuccess,\r\n    showError,\r\n    showInfo,\r\n    showWarning,\r\n  };\r\n\r\n  return <NotificationContext.Provider value={value}>{children}</NotificationContext.Provider>;\r\n};\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}